+     z <- 4
+     x+ g(x)
+ }
f <- function(x){
g <- function(y) {
y +z
}
z <- 4
x + g(x)
}
f <- function(x) {
g <- function(y) {
y +z
}
z <- 4
x + g(x)
}
f(3)
x <- 5
y <- if (x>3){NA}{else{10}}
y <- if (x < 3) {
NA
} else {
10
}
}
y <- if (x < 3) {
NA
} else {
10
}
y <- if (x < 3) {
NA
else
10
}
y <- if (x < 3) {
NA}
else {10}
y <- if (x < 3) {
NA
else {10}
}
y <- if (x < 3) {
NA
}  else {
10
}
x <- 5
y <- if (x < 3) {
+     NA
+ }  else {
+     10
+ }
y <- if (x < 3) {
+     NA
+ }  else {
+     10
+ }
y <- if (x < 3) {
+     NA
+ }  else {
+     10
+ }
x <- 5
y <- if (x < 3) {
+     NA
+ }  else {
+     10
+ }
library(datasets)
data(iris)
?iris
iris
mean ($Speal.length)
tapply (iris["Sepal.Length"])
tapply (iris["Sepal.Length"],c("setosa","versicolor","virginica"),mean)
nrep("setosa",50)
rep("setosa",50)
INDEX <- c(rep ("setosa",50),rep("versicolor",50),rep("virginica",50))
INDEX
tapply (iris["Sepal.Length"],INDEX,mean)
iris["Sepal.Length"]
tapply (iris["Sepal.Length"],INDEX,mean)
tapply?
?tapply
tapply (iris["Sepal.Length"],INDEX)
tapply (iris[,"Sepal.Length"],INDEX)
tapply (iris[,"Sepal.Length"],INDEX,mean)
tapply (iris[,"Sepal.Length"],iris[,"Species"],mean)
dummy <- iris[101:150,1]
mean (dummy)
colmeans(iris)
colMeans(iris)
apply(iris[,1:4],2,mean)
apply(iris,2,mean)
rowMeans(iris[,1:4])
colMeans(iris[,1:4])
data(mtcars)
?mtcars
mtcars
tapply (mtcars$mpg,mtcars$cyl,mean)
tapply?
?tapply
tapply (mtcars$hp,mtcars$cyl,mean)
tapply (mtcars$hp,mtcars$cyl,mean)["4"]-tapply (mtcars$hp,mtcars$cyl,mean)["8"]
debug(ls)
ls
set.seed(1)
rpois(5,2)
library(xlsx)
package(httr)
install.packages("httr")
package(httr)
install.packages(httr)
packages()
package()
package ()
library(httr)
myapp = oauth_app("github",key="643454c5e89033e0f759",secret="cae55ce29eb47dbf06d5f9daf66c2240c0ebf30d")
oauth_endpoints("github")
myapp <- oauth_app("github",key="643454c5e89033e0f759",secret="cae55ce29eb47dbf06d5f9daf66c2240c0ebf30d")
github_token <- oauth2.0_token(oauth_endpoints("github"),myapp)
library(nlme)
library(lattice)
xyplot(weight~Time|Diet, Bodyweight)
xyplot(weight ~ Time | Diet, Bodyweight)
xyplot(weight ~ Time | Diet, BodyWeight)
library(datasets)
data(airqualit)
data(airquality)
qplot(Wind, Ozone, data=airquality, facets = . ~ factor(Month))
library(lattice)
qplot(Wind, Ozone, data=airquality, facets = . ~ factor(Month))
install.packages("ggplot2")
library(ggplot2)
qplot(Wind, Ozone, data=airquality, facets = . ~ factor(Month))
airquality = transform(airquality,Month=factor(Month))
qplot(Wind, Ozone, data=airquality, facets = . ~ factor(Month))
qplot(Wind, Ozone, data=airquality, facets = . ~ Month)
qplot(votes,rating,data=movies,panel=panel.loess)
qplot(votes,rating,data=movies) + stats_smooth("loess")
qplot(votes,rating,data=movies) + geom_smooth("loess")
qplot(votes,rating,data=movies,smooth="loess")
qplot(votes,rating,data=movies,panel=panel.loess)
qplot(votes,rating,data=movies) + geom_smooth()
library(reshape)
activity.data <- read.table(file="activity.csv",
header=TRUE,
sep=",",
stringsAsFactors=FALSE)
setwd("F:/Coursera/Reproducible Research/RepData_PeerAssessment1/activity")
activity.data <- read.table(file="activity.csv",
header=TRUE,
sep=",",
stringsAsFactors=FALSE)
activity.data$date <- as.Date(activity.data$date,"%Y-%m-%d")
activity.melt <- melt (activity.data,id=c("interval","date"),measured="steps",na.rm=TRUE)
activity.daily.mean <- cast (activity.melt,date~variable,fun=mean)
activity.daily.median <- cast (activity.melt,date~variable,fun=median)
activity.daily.sum <- cast (activity.melt,date~variable,fun=sum)
activity.interval.mean <- cast (activity.melt,interval~variable,fun=mean)
activity.interval.mean[which.max(activity.interval.mean$steps),1]
missing.data <- is.na(activity.data)
sum(missing.data)
activity.data[missing.data,2]
activity.data[missing.data,1]
activity.data[missing.data,0]
sum(missing.data)
activity.data[missing.data,]
temp <- merge(activity.data[missing.data,],activity.interval.mean,by=c("Date","interval")
)
temp <- merge(activity.data[missing.data,],activity.interval.mean,by=c("date","interval"))
temp <- merge(activity.data[missing.data,],activity.interval.mean,by="date")
activity.interval.media
activity.interval.median
activity.interval.mean
temp <- merge(activity.data[missing.data,],activity.interval.mean,by="interval")
head(temp)
tail(temp)
temp[1:100,]
activity.interval.mean[1:10,]
temp <- merge(activity.data[missing.data,],activity.interval.mean,by="interval")
activity.clean <- activity.data
activity.clean[missing.data,] <- temp[missing.data,5]
activity.clean[missing.data,]
activity.clean[missing.data,1]<-temp[,1]
activity.clean[missing.data,]
activity.clean
head(activity.clean)
head(activity.data)
temp[1:100]
temp[1:100,]
activity.clean[missing.data,1]<-temp[,4]
activity.clean[missing.data,]
activity.data[1:10,]
activity.clean[1:10.]
activity.clean[1:10,]
temp
activity.data[1:100,]
activity.clean[1:100,]
activity.clean <- activity.data
activity.clean[1:100,]
temp[1:100,]
temp[order(date,interval),]
temp[order(temp$date,interval),]
temp[order(temp$date,temp$interval),]
activity.clean <- activity.data
activity.clean[missing.data,1]<-temp[order(temp$date,temp$interval),4]
temp[order(temp$date,temp$interval),]
activity.clean[1:100,]
activity.clean.daily.median
activity.clean.melt <- melt (activity.clean,id=c("interval","date"),measured="steps",na.rm=TRUE)
activity.clean.daily.mean <- cast (activity.clean.melt,date~variable,fun=mean)
activity.clean.daily.median <- cast (activity.clean.melt,date~variable,fun=median)
activity.clean.daily.median
activity.clean.daily.mean
weekday(activity.clean$date)
weekdays(activity.clean$date)
activity.clean$weekday <- weekday(activity.clean$date)
activity.clean$weekday <- weekdays(activity.clean$date)
head(activity.clean)
tail(activity.clean)
activity.clean$weekday <- weekdays(activity.clean$date)
activity.clean$weekend <- factor()
daysofweek <- data.frame (c("Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday"),c("weekday","weekday","weekday","weekday","weekday","weekend","weekend")
)
daysofweek
days <- c("Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday")
status <- c("weekday","weekday","weekday","weekday","weekday","weekend","weekend")
remove (daysofweek)
daysofweek <- data.frame(days,status)
weekday <- c("Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday")
status <- c("weekday","weekday","weekday","weekday","weekday","weekend","weekend")
daysofweek <- data.frame(days,status)
daysofweek <- data.frame(weekday,status)
activity.clean.coded <- merge(activity.clean,daysofweek,by="weekday")
head(activity.clean.coded)
activity.clean.coded[1:100,]
activity.clean.coded[200:250,]
activity.clean.coded[500:1000,]
tail(activity.clean.coded)
activity.clean.coded[2000:2100,]
View(activity.data)
View(activity.data)
View(activity.clean)
View(activity.clean)
View(activity.clean.coded)
View(activity.clean.coded)
View(activity.clean.coded[sort(activity.clean.coded),]
)
View(activity.clean.coded[sort(activity.clean.coded$date),])
View(activity.clean.coded[order(data,interval),]
)
View(activity.clean.coded[order(data,interval),])
View(activity.clean.coded[order(date,interval),])
activity.clean.coded[order(date,interval),]
activity.clean.coded[order(date),]
activity.clean.coded[1:100,]
activity.clean.coded[order(activity.clean.coded$date),]
View(activity.clean.coded[order(activity.clean.coded$date),])
View(activity.clean.coded[order(activity.clean.coded$date,activity.clean.coded$interval),])
activity.clean.coded <- activity.clean.coded[order(activity.clean.coded$date,activity.clean.coded$interval),]
activity.clean.coded
head(activity.clean.coded)
library(ggplot2)
ggplot(data=activity.daily.sum, aes(x=date, y=steps)) + geom_bar(stat="identity")
ggplot(data=activity.daily.sum, aes(x=date, y=steps)) +
geom_bar(stat="identity") +
xlab("Date")+
ylab("Total Number of Steps per Day")+
ggtitle("Figure 1. Total Number of Steps per Day)")
ggplot(data=activity.interval.mean, aes(x=interval, y=steps)) +
geom_line(aes(group=1)) +
xlab("Five Minute Interval")+
ylab("Mean Number of Steps")+
ggtitle("Figure 2. Mean Number of Steps for Each Interval Over All Days)")
activity.interval.mean[which.max(activity.interval.mean$steps),1]
ggplot(data=activity.clean.sum, aes(x=date, y=steps)) +
geom_bar(stat="identity") +
xlab("Date")+
ylab("Total Number of Steps per Day")+
ggtitle("Figure 3. Total Number of Steps per Day with Mean Interval Imputed Results)")
activity.clean.sum <- cast (activity.clean.melt,date~variable,fun=sum)
ggplot(data=activity.clean.sum, aes(x=date, y=steps)) +
geom_bar(stat="identity") +
xlab("Date")+
ylab("Total Number of Steps per Day")+
ggtitle("Figure 3. Total Number of Steps per Day with Mean Interval Imputed Results)")
# Reproducible Research: Peer Assessment 1
Jeff Stephens
setwd("F:/Coursera/Reproducible Research/RepData_PeerAssessment1/activity")
activity.data <- read.table(file="activity.csv",
header=TRUE,
sep=",",
stringsAsFactors=FALSE)
activity.data$date <- as.Date(activity.data$date,"%Y-%m-%d")
activity.daily.sum
mean (activity.daily.sum$steps)
median (activity.daily.sum$steps)
View(activity.interval.mean)
View(activity.interval.mean)
View(activity.clean.coded)
activity.coded.sum
activity.data <- read.table(file="activity/activity.csv",
header=TRUE,
sep=",",
stringsAsFactors=FALSE)
activity.data$date <- as.Date(activity.data$date,"%Y-%m-%d")
setwd("F:/Coursera/Reproducible Research/RepData_PeerAssessment1")
activity.data <- read.table(file="activity/activity.csv",
header=TRUE,
sep=",",
stringsAsFactors=FALSE)
activity.data$date <- as.Date(activity.data$date,"%Y-%m-%d")
activity.melt <- melt (activity.data,id=c("interval","date"),measured="steps",na.rm=TRUE)
activity.daily.sum <- cast (activity.melt,date~variable,fun=sum)
ggplot(data=activity.daily.sum, aes(x=date, y=steps)) +
geom_bar(stat="identity") +
xlab("Date")+
ylab("Total Number of Steps per Day")+
ggtitle("Figure 1. Total Number of Steps per Day)")
activity.interval.mean <- cast (activity.melt,interval~variable,fun=mean)
ggplot(data=activity.interval.mean, aes(x=interval, y=steps)) +
geom_line(aes(group=1)) +
xlab("Five Minute Interval")+
ylab("Mean Number of Steps")+
ggtitle("Figure 2. Mean Number of Steps for Each Interval Over All Days")
activity.clean <- activity.data
missing.data <- is.na(activity.data)
temp <- merge(activity.data[missing.data,],activity.interval.mean,by="interval")
activity.clean[missing.data,1]<-temp[order(temp$date,temp$interval),4]
activity.clean.melt <- melt (activity.clean,id=c("interval","date"),measured="steps",na.rm=TRUE)
activity.clean.sum <- cast (activity.clean.melt,date~variable,fun=sum)
ggplot(data=activity.clean.sum, aes(x=date, y=steps)) +
geom_bar(stat="identity") +
xlab("Date")+
ylab("Total Number of Steps per Day")+
ggtitle("Figure 3. Total Steps per Day with Imputed Mean Interval")
View(activity.clean.melt)
activity.clean$weekday <- weekdays(activity.clean$date)
weekday <- c("Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday")
status <- c("weekday","weekday","weekday","weekday","weekday","weekend","weekend")
daysofweek <- data.frame(weekday,status)
activity.clean.coded <- merge(activity.clean,daysofweek,by="weekday")
activity.clean.coded <- activity.clean.coded[order(activity.clean.coded$date,activity.clean.coded$interval),]
activity.coded.melt <- melt (activity.clean.coded,
id=c("interval","date","status","weekday"),
measured="steps",
na.rm=TRUE)
activity.coded.sum <- cast (activity.coded.melt,date + status ~variable,fun=sum)
head(activity.coded.sum)
activity.coded.mean <- cast (activity.coded.melt,
interval + date + status ~ variable,
fun=mean)
head(activity.coded.mean)
tail(activity.coded.mean)
activity.coded.mean[100:200,]
head(activity.clean.coded)
c(activity.clean.coded$date,activity.clean.coded$interval)
head(activity.clean.coded)
foo <- c(activity.clean.coded$date,activity.clean.coded$interval)
foo[1]
activity.clean.coded$date
activity.clean.coded$interval
minute(500)
library(lubridate)
install.packages("lubridate")
library(lubridate)
minute(500)
minutes(500)
activity.coded.mean[1:10,]
minutes(activity.coded.mean[1,1])+activity.coded.mean[1,2]
minutes(activity.coded.mean[100,1])+activity.coded.mean[100,2]
activity.clean.coded
activity.clean.coded[1:10,]
activity.clean.coded$datetime <- activity.clean.coded[,4]+minutes(activity.clean.coded[,5])
head(activity.clean.coded)
tail(activity.clean.coded)
activity.clean.coded[1,4]
activity.clean.coded[1,3]
activity.clean.coded <- merge(activity.clean,daysofweek,by="weekday")
activity.clean.coded <- activity.clean.coded[order(activity.clean.coded$date,activity.clean.coded$interval),]
head(activity.clean.coded)
activity.clean.coded$datetime <- activity.clean.coded[,3]+minutes(activity.clean.coded[,4])
head(activity.clean.coded)
tail(activity.clean.coded)
View(activity.data)
View(activity.data)
head(activity.data)
tail(activity.data)
ymd(activity.clean.coded$date)
activity.clean.coded$datetime <- ymd(activity.clean.coded[,3])
head(activity.clean.coded)
activity.clean.coded$datetime <- ymd(activity.clean.coded[,3])+minutes(0)
head(activity.clean.coded)
activity.clean.coded$datetime <- ymd(activity.clean.coded[,3])+seconds(0)
head(activity.clean.coded)
activity.clean.coded$datetime <- activity.clean.coded$datetime+ minutes(activity.clean.coded[,4])
head(activity.clean.coded)
tail(activity.data)
tail(activity.clean.coded)
minutes(2355)
activity.clean.coded[1:100]
activity.clean.coded[1:100,]
activity.clean.coded[200:300,]
activity.clean.coded[1:100,]
activity.clean.coded[100:200,]
activity.clean.coded[200:300,]
activity.data <- read.table(file="activity/activity.csv",
header=TRUE,
sep=",",
stringsAsFactors=FALSE)
activity.data$date <- as.Date(activity.data$date,"%Y-%m-%d")
activity.melt <- melt (activity.data,id=c("interval","date"),measured="steps",na.rm=TRUE)
activity.daily.sum <- cast (activity.melt,date~variable,fun=sum)
ggplot(data=activity.daily.sum, aes(x=date, y=steps)) +
geom_bar(stat="identity") +
xlab("Date")+
ylab("Total Number of Steps per Day")+
ggtitle("Figure 1. Total Number of Steps per Day)")
activity.interval.mean <- cast (activity.melt,interval~variable,fun=mean)
ggplot(data=activity.interval.mean, aes(x=interval, y=steps)) +
geom_line(aes(group=1)) +
xlab("Five Minute Interval")+
ylab("Mean Number of Steps")+
ggtitle("Figure 2. Mean Number of Steps for Each Interval Over All Days")
activity.clean <- activity.data
missing.data <- is.na(activity.data)
temp <- merge(activity.data[missing.data,],activity.interval.mean,by="interval")
activity.clean[missing.data,1]<-temp[order(temp$date,temp$interval),4]
activity.clean.melt <- melt (activity.clean,id=c("interval","date"),measured="steps",na.rm=TRUE)
activity.clean.sum <- cast (activity.clean.melt,date~variable,fun=sum)
ggplot(data=activity.clean.sum, aes(x=date, y=steps)) +
geom_bar(stat="identity") +
xlab("Date")+
ylab("Total Number of Steps per Day")+
ggtitle("Figure 3. Total Steps per Day with Imputed Mean Interval")
activity.clean$weekday <- weekdays(activity.clean$date)
weekday <- c("Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday")
status <- c("weekday","weekday","weekday","weekday","weekday","weekend","weekend")
daysofweek <- data.frame(weekday,status)
activity.clean.coded <- merge(activity.clean,daysofweek,by="weekday")
activity.clean.coded <- activity.clean.coded[order(activity.clean.coded$date,activity.clean.coded$interval),]
```
activity.coded.melt <- melt (activity.clean.coded,
id=c("interval","date","status","weekday"),
measured="steps",
na.rm=TRUE)
activity.coded.mean <- cast (activity.coded.melt,
interval + date + status ~ variable,
fun=mean)
activity.coded.mean
head(activity.coded.mean)
activity.coded.mean <- activity.coded.mean[order(activity.coded.mean$date,activity.coded.mean$interval),]
head(activity.coded.mean)
tail(activity.coded.mean)
ggplot(data=activity.coded.mean, aes(x=interval, y=steps)) +
geom_line(aes(group=1)) +
facet_grid(status) ~ .) +
xlab("Five Minute Interval")+
ylab("Mean Number of Steps")+
ggtitle("Figure 4. Mean Number of Steps for Each Interval Split by Day of the Week")
ggplot(data=activity.coded.mean, aes(x=interval, y=steps)) +
geom_line(aes(group=1)) +
facet_grid(status) ~ .) +
ggplot(data=activity.coded.mean, aes(x=interval, y=steps)) +
geom_line(aes(group=1)) +
facet_grid(status ~ .) +
xlab("Five Minute Interval")+
ylab("Mean Number of Steps")+
ggtitle("Figure 4. Mean Number of Steps for Each Interval Split by Weekday")
head(activity.coded.mean)
interval + status + date ~ variable,
activity.coded.melt <- melt (activity.clean.coded,
id=c("interval","date","status","weekday"),
measured="steps",
na.rm=TRUE)
activity.coded.mean <- cast (activity.coded.melt,
interval + status + date ~ variable,
fun=mean)
activity.coded.mean <- activity.coded.mean[order(activity.coded.mean$date,activity.coded.mean$interval),]
ggplot(data=activity.coded.mean, aes(x=interval, y=steps)) +
geom_line(aes(group=1)) +
facet_grid(status ~ .) +
xlab("Five Minute Interval")+
ylab("Mean Number of Steps")+
ggtitle("Figure 4. Mean Number of Steps for Each Interval Split by Weekday")
activity.coded.mean <- cast (activity.coded.melt,
interval + status ~ variable,
fun=mean)
activity.coded.mean <- activity.coded.mean[order(activity.coded.mean$date,activity.coded.mean$interval),]
ggplot(data=activity.coded.mean, aes(x=interval, y=steps)) +
activity.coded.mean <- activity.coded.mean[order(activity.coded.mean$interval),]
activity.coded.mean <- cast (activity.coded.melt,
interval + status ~ variable,
fun=mean)
View(activity.coded.mean)
activity.coded.mean <- activity.coded.mean[order(activity.coded.mean$interval),]
ggplot(data=activity.coded.mean, aes(x=interval, y=steps)) +
geom_line(aes(group=1)) +
facet_grid(status ~ .) +
xlab("Five Minute Interval")+
ylab("Mean Number of Steps")+
ggtitle("Figure 4. Mean Number of Steps for Each Interval Split by Weekday")
knit2html
knit2html()
library(knitr)
knit2html()
knit2html(PA1_template.Rmd)
?knit2html()
knit2html("PA1_template.Rmd")
