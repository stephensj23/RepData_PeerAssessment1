find.package("devtools")
install.packages (Kernsmooth)
install.packages ('Kernsmooth R')
install.packages (KernSmooth R)
install.packages('KernSmooth R')
install.packages (KernSmooth)
install.packages ("KernSmooth")
load
load.packages ("KernSmooth")
KernSmooth
KernSmooth
packages.install ("KernSmooth")
package.install ("KernSmooth")
r cmd install KernSmooth
R CMD INSTALL KernSMooth
install.packages ("KernSmooth")
library (KernSmooth)
pwd
install.packages("swirl")
library(swirl)
swirl
swirl()
5+7
x <- 5+7
x
y<-x-3
y
z<-c(1.1,9,3.14)
?c
z
c(z,555,z)
z*2+100
mySqrt<-sqrt(z-1)
mySqrt
myDiv<-z/mySqrt
myDiv
c(1,2,3,4)+c(0,10)
c(1,2,3,4)+c(0,10,100)
1:20
pi:10
15:1
':'
`:`
':'
`:`
?`:`
seq(1:20)
seq(1,20)
seq(0,10,by=0.5)
seq(5,10,length=30)
my_seq <- seq(5,10,lenght=30)
my_seq<-seq(5,10,length=30)
my_seq
length(my_seq)
1:length(my_seq)
seq(along=my_seq)
seq_along(my_seq)
rep(0,times=40)
rep(c(0,1,2),times=10)
rep(c(0,1,2),each=10)
num_vect <- (0.5,55,-10,6)
num_vect <- c(0.5,55,-10,6)
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("My","name","is")
my_char
paste (my_char, collapse =" ")
my_name <- c(my_char,"Jeff")
my_name
paste (my_name,collapse=" ")
paste ("Hello","world!",sep=" ")
paste (c(1:3),c("X","Y","Z"),sep =""
paste (c(1:3))
paste (c(1:3),c("X","Y","Z"),sep="")
paste (1:3,c("X","Y","Z",sep=""))
paste (1:3, c("X","Y","Z"),sep = "")
paste (LETTERS,1:4,sep="-")
add2 <- function (x,y){
x + y
}
add2 (1,2)
above10 <- function (x){
use <- x > 10
x[use]
}
above <- function (x,n) {
use <- x > n
x[use]
}
x <- 1:20
above10 (x)
above (x,2)
columnmean <- function (y){
nc <- ncol(y)
means <- numeric(nc)
for (i in 1:nc){
means[i]<-mean(y[,i])
}
means
}
x <- 1:10
if (x>5) {x <- 0}
f <- function(X) {}
f <- function(X){
g <- function(y) {
y +z}
z <- 4
x+ g(x)
}
z <- 10
f (3)
f(3)
x <- 0
f(3)
z<-10
f(3)
f <- function(X){
g <- function(y) {
y +z}
z <- 4
x+ g(x)
}
z <- 10
f(3)
f (3)
f <- function(x){
+     g <- function(y) {
+         y +z}
+     z <- 4
+     x+ g(x)
+ }
f <- function(x){
g <- function(y) {
y +z
}
z <- 4
x + g(x)
}
f <- function(x) {
g <- function(y) {
y +z
}
z <- 4
x + g(x)
}
f(3)
x <- 5
y <- if (x>3){NA}{else{10}}
y <- if (x < 3) {
NA
} else {
10
}
}
y <- if (x < 3) {
NA
} else {
10
}
y <- if (x < 3) {
NA
else
10
}
y <- if (x < 3) {
NA}
else {10}
y <- if (x < 3) {
NA
else {10}
}
y <- if (x < 3) {
NA
}  else {
10
}
x <- 5
y <- if (x < 3) {
+     NA
+ }  else {
+     10
+ }
y <- if (x < 3) {
+     NA
+ }  else {
+     10
+ }
y <- if (x < 3) {
+     NA
+ }  else {
+     10
+ }
x <- 5
y <- if (x < 3) {
+     NA
+ }  else {
+     10
+ }
library(datasets)
data(iris)
?iris
iris
mean ($Speal.length)
tapply (iris["Sepal.Length"])
tapply (iris["Sepal.Length"],c("setosa","versicolor","virginica"),mean)
nrep("setosa",50)
rep("setosa",50)
INDEX <- c(rep ("setosa",50),rep("versicolor",50),rep("virginica",50))
INDEX
tapply (iris["Sepal.Length"],INDEX,mean)
iris["Sepal.Length"]
tapply (iris["Sepal.Length"],INDEX,mean)
tapply?
?tapply
tapply (iris["Sepal.Length"],INDEX)
tapply (iris[,"Sepal.Length"],INDEX)
tapply (iris[,"Sepal.Length"],INDEX,mean)
tapply (iris[,"Sepal.Length"],iris[,"Species"],mean)
dummy <- iris[101:150,1]
mean (dummy)
colmeans(iris)
colMeans(iris)
apply(iris[,1:4],2,mean)
apply(iris,2,mean)
rowMeans(iris[,1:4])
colMeans(iris[,1:4])
data(mtcars)
?mtcars
mtcars
tapply (mtcars$mpg,mtcars$cyl,mean)
tapply?
?tapply
tapply (mtcars$hp,mtcars$cyl,mean)
tapply (mtcars$hp,mtcars$cyl,mean)["4"]-tapply (mtcars$hp,mtcars$cyl,mean)["8"]
debug(ls)
ls
set.seed(1)
rpois(5,2)
library(xlsx)
package(httr)
install.packages("httr")
package(httr)
install.packages(httr)
packages()
package()
package ()
library(httr)
myapp = oauth_app("github",key="643454c5e89033e0f759",secret="cae55ce29eb47dbf06d5f9daf66c2240c0ebf30d")
oauth_endpoints("github")
myapp <- oauth_app("github",key="643454c5e89033e0f759",secret="cae55ce29eb47dbf06d5f9daf66c2240c0ebf30d")
github_token <- oauth2.0_token(oauth_endpoints("github"),myapp)
library(nlme)
library(lattice)
xyplot(weight~Time|Diet, Bodyweight)
xyplot(weight ~ Time | Diet, Bodyweight)
xyplot(weight ~ Time | Diet, BodyWeight)
library(datasets)
data(airqualit)
data(airquality)
qplot(Wind, Ozone, data=airquality, facets = . ~ factor(Month))
library(lattice)
qplot(Wind, Ozone, data=airquality, facets = . ~ factor(Month))
install.packages("ggplot2")
library(ggplot2)
qplot(Wind, Ozone, data=airquality, facets = . ~ factor(Month))
airquality = transform(airquality,Month=factor(Month))
qplot(Wind, Ozone, data=airquality, facets = . ~ factor(Month))
qplot(Wind, Ozone, data=airquality, facets = . ~ Month)
qplot(votes,rating,data=movies,panel=panel.loess)
qplot(votes,rating,data=movies) + stats_smooth("loess")
qplot(votes,rating,data=movies) + geom_smooth("loess")
qplot(votes,rating,data=movies,smooth="loess")
qplot(votes,rating,data=movies,panel=panel.loess)
qplot(votes,rating,data=movies) + geom_smooth()
# Reproducible Research: Peer Assessment 1
Jeff Stephens
## Loading and preprocessing the data
This section of code reads in the comma separated file (*activity.csv*) in the main directory and converts the dates into a format suitable for date/time calculations in R. The data is stored in a variable *activity.data*.
```{r}
activity.data <- read.table(file="activity.csv",
header=TRUE,
sep=",",
stringsAsFactors=FALSE)
activity.data$date <- as.Date(activity.data$date,"%Y-%m-%d")
setwd("F:/Coursera/Reproducible Research/RepData_PeerAssessment1")
activity.data <- read.table(file="activity.csv",
header=TRUE,
sep=",",
stringsAsFactors=FALSE)
setwd("F:/Coursera/Reproducible Research/RepData_PeerAssessment1/activity")
activity.data <- read.table(file="activity.csv",
header=TRUE,
sep=",",
stringsAsFactors=FALSE)
activity.data$date <- as.Date(activity.data$date,"%Y-%m-%d")
activity.clean <- na.omit(activity.data)
head(activity.clean)
activity.melt <- melt(activity.data,na-rm=TRUE,value.name="interval")
activity.melt <- melt(activity.data,na.rm=TRUE,value.name="interval")
library(reshape2)
activity.melt <- melt(activity.data,na.rm=TRUE,value.name="interval")
head(activity.melt)
activity.melt <- melt(activity.data,na.rm=TRUE)
head(activity.melt)
tail (activity.melt)
head(activity.clean)
activity.melt <- melt(activity.data,na.rm=TRUE,value.name="steps")
head(activity.melt)
cast(activity.melt,FORMULA=sum,data~steps)
library(reshape)
activity.melt <- melt(activity.data,na.rm=TRUE,value.name="steps")
head(activity.melt)
cast(activity.melt,FORMULA=sum,data~value)
cast(activity.melt,FORMULA=sum,date~steps)
cast(activity.melt,FORMULA=sum,date~.)
cast(activity.melt,FORMULA=sum,date ~ .)
cast(activity.melt,FORMULA=sum,date ~ .)
remove(activity.clean)
remove (activity.melt)
library(reshape)
melt (activity.data,id=c("interval","date"),measured="steps")
activity.melt <- melt (activity.data,id=c("interval","date"),measured="steps")
activity.melt <- melt (activity.data,id=c("interval","date"),measured="steps",na.rm=TRUE)
cast (activity.melt,date~variable)
cast (activity.melt,date~variable,function=mean)
cast (activity.melt,date~variable,fun=mean)
hist(activity.mean)
activity.mean <- cast (activity.melt,date~variable,fun=mean)
hist(activity.mean)
hist(activity.mean$steps)
activity.median <- cast (activity.melt,date~variable,fun=median)
activity.mean <- cast (activity.melt,date~variable,fun=mean)
head(activity.median)
activity.median
activity.sum <- cast (activity.melt,date~variable)
activity.sum
activity.sum <- cast (activity.melt,date~variable,fun=sum)
activity.sum
hist(activity.sum$steps)
histinfo(activity.sum$steps)
hist(activity.sum$steps,breaks=53)
hist(activity.sum$steps,breaks=26)
hist(activity.sum$steps)
hist(activity.sum$date)
hist(activity.sum$date,breaks=53)
activity.median
hist(activity.data)
hist(activity.data$steps)
activity.interval.mean <- cast (activity.melt,interval~variable,fun=mean)
head(activity.interval.mean)
tail(activity.interval.mean)
which.max(activity.interval.mean)
which.max(activity.interval.mean$steps)
activity.interval.mean[which.max(activity.interval.mean$steps),]
activity.interval.mean[which.max(activity.interval.mean$steps),2]
activity.interval.mean[which.max(activity.interval.mean$steps),1]
sum(is.na(activity.data))
missing.data <- is.na(activity.data)
sum(missing.data)
activity.data[missing.data,]
head(activity.data[missing.data,])
tail(activity.data[missing.data,])
activity.data[missing.data,]
head(activity.daily.mean)
library(reshape)
activity.data <- read.table(file="activity.csv",
header=TRUE,
sep=",",
stringsAsFactors=FALSE)
activity.data$date <- as.Date(activity.data$date,"%Y-%m-%d")
activity.melt <- melt (activity.data,id=c("interval","date"),measured="steps",na.rm=TRUE)
activity.daily.mean <- cast (activity.melt,date~variable,fun=mean)
activity.daily.median <- cast (activity.melt,date~variable,fun=median)
activity.daily.sum <- cast (activity.melt,date~variable,fun=sum)
activity.interval.mean <- cast (activity.melt,interval~variable,fun=mean)
activity.interval.mean[which.max(activity.interval.mean$steps),1]
missing.data <- is.na(activity.data)
sum(missing.data)
activity.data[missing.data,]
head(activity.daily.mean)
activity.data[1,]
activity.data[1,1]
activity.daily.mean[1,]
activity.daily.mean[1,2]
